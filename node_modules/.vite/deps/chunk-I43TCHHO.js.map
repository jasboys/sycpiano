{
  "version": 3,
  "sources": ["../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/internalHelpers/_guard.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/internalHelpers/_rgbToHsl.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/color/parseToHsl.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/internalHelpers/_hslToHex.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/color/hsl.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/color/hsla.js", "../../../.yarn/cache/polished-npm-4.2.2-eb3d423b8d-97fb927dc5.zip/node_modules/polished/lib/color/toColorString.js"],
  "sourcesContent": ["\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nfunction guard(lowerBoundary, upperBoundary, value) {\n  return Math.max(lowerBoundary, Math.min(upperBoundary, value));\n}\n\nvar _default = guard;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nfunction rgbToHsl(color) {\n  // make sure rgb are contained in a set of [0, 255]\n  var red = color.red / 255;\n  var green = color.green / 255;\n  var blue = color.blue / 255;\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2;\n\n  if (max === min) {\n    // achromatic\n    if (color.alpha !== undefined) {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness,\n        alpha: color.alpha\n      };\n    } else {\n      return {\n        hue: 0,\n        saturation: 0,\n        lightness: lightness\n      };\n    }\n  }\n\n  var hue;\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n\n  switch (max) {\n    case red:\n      hue = (green - blue) / delta + (green < blue ? 6 : 0);\n      break;\n\n    case green:\n      hue = (blue - red) / delta + 2;\n      break;\n\n    default:\n      // blue case\n      hue = (red - green) / delta + 4;\n      break;\n  }\n\n  hue *= 60;\n\n  if (color.alpha !== undefined) {\n    return {\n      hue: hue,\n      saturation: saturation,\n      lightness: lightness,\n      alpha: color.alpha\n    };\n  }\n\n  return {\n    hue: hue,\n    saturation: saturation,\n    lightness: lightness\n  };\n}\n\nvar _default = rgbToHsl;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = parseToHsl;\n\nvar _parseToRgb = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./parseToRgb\"));\n\nvar _rgbToHsl = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_rgbToHsl\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns an HslColor or HslaColor object. This utility function is only useful\n * if want to extract a color component. With the color util `toColorString` you\n * can convert a HslColor or HslaColor object back to a string.\n *\n * @example\n * // Assigns `{ hue: 0, saturation: 1, lightness: 0.5 }` to color1\n * const color1 = parseToHsl('rgb(255, 0, 0)');\n * // Assigns `{ hue: 128, saturation: 1, lightness: 0.5, alpha: 0.75 }` to color2\n * const color2 = parseToHsl('hsla(128, 100%, 50%, 0.75)');\n */\nfunction parseToHsl(color) {\n  // Note: At a later stage we can optimize this function as right now a hsl\n  // color would be parsed converted to rgb values and converted back to hsl.\n  return (0, _rgbToHsl[\"default\"])((0, _parseToRgb[\"default\"])(color));\n}\n\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _hslToRgb = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./_hslToRgb\"));\n\nvar _reduceHexValue = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./_reduceHexValue\"));\n\nvar _numberToHex = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./_numberToHex\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction colorToHex(color) {\n  return (0, _numberToHex[\"default\"])(Math.round(color * 255));\n}\n\nfunction convertToHex(red, green, blue) {\n  return (0, _reduceHexValue[\"default\"])(\"#\" + colorToHex(red) + colorToHex(green) + colorToHex(blue));\n}\n\nfunction hslToHex(hue, saturation, lightness) {\n  return (0, _hslToRgb[\"default\"])(hue, saturation, lightness, convertToHex);\n}\n\nvar _default = hslToHex;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = hsl;\n\nvar _hslToHex = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_hslToHex\"));\n\nvar _errors = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsl(359, 0.75, 0.4),\n *   background: hsl({ hue: 360, saturation: 0.75, lightness: 0.4 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsl(359, 0.75, 0.4)};\n *   background: ${hsl({ hue: 360, saturation: 0.75, lightness: 0.4 })};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"#b3191c\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsl(value, saturation, lightness) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number') {\n    return (0, _hslToHex[\"default\"])(value, saturation, lightness);\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined) {\n    return (0, _hslToHex[\"default\"])(value.hue, value.saturation, value.lightness);\n  }\n\n  throw new _errors[\"default\"](1);\n}\n\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = hsla;\n\nvar _hslToHex = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_hslToHex\"));\n\nvar _hslToRgb = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_hslToRgb\"));\n\nvar _errors = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Returns a string value for the color. The returned result is the smallest possible rgba or hex notation.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: hsla(359, 0.75, 0.4, 0.7),\n *   background: hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 }),\n *   background: hsla(359, 0.75, 0.4, 1),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${hsla(359, 0.75, 0.4, 0.7)};\n *   background: ${hsla({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0,7 })};\n *   background: ${hsla(359, 0.75, 0.4, 1)};\n * `\n *\n * // CSS in JS Output\n *\n * element {\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"rgba(179,25,28,0.7)\";\n *   background: \"#b3191c\";\n * }\n */\nfunction hsla(value, saturation, lightness, alpha) {\n  if (typeof value === 'number' && typeof saturation === 'number' && typeof lightness === 'number' && typeof alpha === 'number') {\n    return alpha >= 1 ? (0, _hslToHex[\"default\"])(value, saturation, lightness) : \"rgba(\" + (0, _hslToRgb[\"default\"])(value, saturation, lightness) + \",\" + alpha + \")\";\n  } else if (typeof value === 'object' && saturation === undefined && lightness === undefined && alpha === undefined) {\n    return value.alpha >= 1 ? (0, _hslToHex[\"default\"])(value.hue, value.saturation, value.lightness) : \"rgba(\" + (0, _hslToRgb[\"default\"])(value.hue, value.saturation, value.lightness) + \",\" + value.alpha + \")\";\n  }\n\n  throw new _errors[\"default\"](2);\n}\n\nmodule.exports = exports.default;", "\"use strict\";\n\nexports.__esModule = true;\nexports[\"default\"] = toColorString;\n\nvar _hsl = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./hsl\"));\n\nvar _hsla = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./hsla\"));\n\nvar _rgb = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./rgb\"));\n\nvar _rgba = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"./rgba\"));\n\nvar _errors = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require(\"../internalHelpers/_errors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar isRgb = function isRgb(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isRgba = function isRgba(color) {\n  return typeof color.red === 'number' && typeof color.green === 'number' && typeof color.blue === 'number' && typeof color.alpha === 'number';\n};\n\nvar isHsl = function isHsl(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && (typeof color.alpha !== 'number' || typeof color.alpha === 'undefined');\n};\n\nvar isHsla = function isHsla(color) {\n  return typeof color.hue === 'number' && typeof color.saturation === 'number' && typeof color.lightness === 'number' && typeof color.alpha === 'number';\n};\n/**\n * Converts a RgbColor, RgbaColor, HslColor or HslaColor object to a color string.\n * This util is useful in case you only know on runtime which color object is\n * used. Otherwise we recommend to rely on `rgb`, `rgba`, `hsl` or `hsla`.\n *\n * @example\n * // Styles as object usage\n * const styles = {\n *   background: toColorString({ red: 255, green: 205, blue: 100 }),\n *   background: toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 }),\n *   background: toColorString({ hue: 240, saturation: 1, lightness: 0.5 }),\n *   background: toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 }),\n * }\n *\n * // styled-components usage\n * const div = styled.div`\n *   background: ${toColorString({ red: 255, green: 205, blue: 100 })};\n *   background: ${toColorString({ red: 255, green: 205, blue: 100, alpha: 0.72 })};\n *   background: ${toColorString({ hue: 240, saturation: 1, lightness: 0.5 })};\n *   background: ${toColorString({ hue: 360, saturation: 0.75, lightness: 0.4, alpha: 0.72 })};\n * `\n *\n * // CSS in JS Output\n * element {\n *   background: \"#ffcd64\";\n *   background: \"rgba(255,205,100,0.72)\";\n *   background: \"#00f\";\n *   background: \"rgba(179,25,25,0.72)\";\n * }\n */\n\n\nfunction toColorString(color) {\n  if (typeof color !== 'object') throw new _errors[\"default\"](8);\n  if (isRgba(color)) return (0, _rgba[\"default\"])(color);\n  if (isRgb(color)) return (0, _rgb[\"default\"])(color);\n  if (isHsla(color)) return (0, _hsla[\"default\"])(color);\n  if (isHsl(color)) return (0, _hsl[\"default\"])(color);\n  throw new _errors[\"default\"](8);\n}\n\nmodule.exports = exports.default;"],
  "mappings": "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",
  "names": ["isRgb", "isRgba", "isHsl", "isHsla"]
}
