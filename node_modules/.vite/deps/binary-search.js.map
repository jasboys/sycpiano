{
  "version": 3,
  "sources": ["../../../.yarn/cache/binary-search-npm-1.3.6-b150a83e72-2e6b3459a9.zip/node_modules/binary-search/index.js"],
  "sourcesContent": ["module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    // The naive `low + high >>> 1` could fail for array lengths > 2**31\n    // because `>>>` converts its operands to int32. `low + (high - low >>> 1)`\n    // works for array lengths <= 2**32-1 which is also Javascript's max array\n    // length.\n    mid = low + ((high - low) >>> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    // Too low.\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    // Too high.\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    // Key found.\n    else\n      return mid;\n  }\n\n  // Key not found.\n  return ~low;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,WAAO,UAAU,SAAS,UAAU,QAAQ,YAAY,KAAK,MAAM;AACjE,UAAI,KAAK;AAET,UAAG,QAAQ;AACT,cAAM;AAAA,WAEH;AACH,cAAM,MAAI;AACV,YAAG,MAAM,KAAK,OAAO,SAAS;AAC5B,gBAAM,IAAI,WAAW,qBAAqB;AAAA,MAC9C;AAEA,UAAG,SAAS;AACV,eAAO,SAAS,SAAS;AAAA,WAEtB;AACH,eAAO,OAAK;AACZ,YAAG,OAAO,OAAO,QAAQ,SAAS;AAChC,gBAAM,IAAI,WAAW,qBAAqB;AAAA,MAC9C;AAEA,aAAM,OAAO,MAAM;AAKjB,cAAM,OAAQ,OAAO,QAAS;AAC9B,cAAM,CAAC,WAAW,SAAS,GAAG,GAAG,QAAQ,KAAK,QAAQ;AAGtD,YAAG,MAAM;AACP,gBAAO,MAAM;AAAA,iBAGP,MAAM;AACZ,iBAAO,MAAM;AAAA;AAIb,iBAAO;AAAA,MACX;AAGA,aAAO,CAAC;AAAA,IACV;AAAA;AAAA;",
  "names": []
}
