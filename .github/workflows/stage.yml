name: Deploy Website to Staging

on:
  push:
    branches: [ "deploy" ]

jobs:
  assets:
    runs-on: ubuntu-latest
    environment: ${{ vars.CURRENT_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh-key: ${{ secrets.SSH_ED25519 }}
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-user: ${{ secrets.SSH_USER }}
      - name: Rsync Assets
        if: ${{ vars.ASSETS_DIR != '' }}
        run: |
          rsync -rpivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx --files-from=$SYNC_FILE_LIST $SRC server:$DEST
        env:
          SYNC_FILE_LIST: ${{ format('{0}/rsync-assets-list', github.workspace) }}
          SRC: ${{ format('{0}/assets', github.workspace) }}
          DEST: ${{ vars.ASSETS_DIR }}

  admin:
    runs-on: ubuntu-latest
    environment: ${{ vars.CURRENT_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node and Common
        uses: ./.github/actions/setup-node-and-common
        with:
          node-version: 20.x
          cache-name: admin
      - name: Admin Install Deps and Build
        run: |
          yarn workspaces focus admin
          yarn workspace admin build
        env:
          GAPI_KEY_APP: ${{ secrets.GAPI_KEY_APP }}
          PUBLIC_HOST: ${{ vars.PUBLIC_HOST }}
      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh-key: ${{ secrets.SSH_ED25519 }}
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-user: ${{ secrets.SSH_USER }}
      - name: Rsync Scripts and HTML
        if: ${{ vars.HTML_DEST != '' && vars.ADMIN_DEST != '' }}
        run: |
          rsync --delete --dirs -ivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx -p $SCRIPT_SRC server:$SCRIPT_DEST
          rsync -ivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx -p $HTML_SRC server:$HTML_DEST
        env:
          SCRIPT_SRC: ./packages/admin/build/static/scripts/admin/
          SCRIPT_DEST: ${{ vars.ADMIN_DEST }}
          HTML_SRC: ./packages/admin/build/admin.html
          HTML_DEST: ${{ vars.HTML_DEST }}

  frontend:
    runs-on: ubuntu-latest
    environment: ${{ vars.CURRENT_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node and Common
        uses: ./.github/actions/setup-node-and-common
        with:
          node-version: 20.x
          cache-name: web
      - name: Web Install Deps and Build
        run: |
          yarn workspaces focus web
          yarn workspace web build
        env:
          GAPI_KEY_APP: ${{ secrets.GAPI_KEY_APP }}
          STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh-key: ${{ secrets.SSH_ED25519 }}
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-user: ${{ secrets.SSH_USER }}
      - name: Rsync Scripts and HTML
        if: ${{ vars.HTML_DEST != '' && vars.WEB_DEST != '' }}
        run: |
          rsync --delete --dirs -ivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx -p $SCRIPT_SRC server:$SCRIPT_DEST
          rsync -ivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx -p $HTML_SRC server:$HTML_DEST
        env:
          SCRIPT_SRC: ./packages/web/build/static/scripts/web/
          SCRIPT_DEST: ${{ vars.WEB_DEST }}
          HTML_SRC: ./packages/web/build/index.html
          HTML_DEST: ${{ vars.HTML_DEST }}

  backend:
    runs-on: ubuntu-latest
    environment: ${{ vars.CURRENT_ENVIRONMENT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node and Common
        uses: ./.github/actions/setup-node-and-common
        with:
          node-version: 20.x
          cache-name: server
      - name: Server Install Deps and Build
        run: |
          yarn workspaces focus server
          yarn workspace server build
      - name: Setup SSH
        uses: ./.github/actions/setup-ssh
        with:
          ssh-key: ${{ secrets.SSH_ED25519 }}
          ssh-host: ${{ secrets.SSH_HOST }}
          ssh-user: ${{ secrets.SSH_USER }}
      - name: Rsync Build Artifacts
        if: ${{ vars.BACKEND_DIR != '' }}
        run: |
          rsync --delete -rpivz --chown=deploy:www-data --chmod=Dg=rwx,Fg=rwx --files-from=$SYNC_FILE_LIST --exclude=.env $SRC server:$DEST
        env:
          SYNC_FILE_LIST: ${{ format('{0}/rsync-server-list', github.workspace) }}
          SRC: ${{ github.workspace }}
          DEST: ${{ vars.BACKEND_DIR }}
      - name: Install Deps on Server
        run: |
          ssh server $COMMAND
        env:
          COMMAND: ${{ format('cd {0} && . ~/.nvm/nvm.sh && nvm use 20 && yarn workspaces focus server --production', vars.BACKEND_DIR) }}
      - name: Migrate Up
        run: |
          ssh server $COMMAND
        env:
          COMMAND: ${{ format('cd {0} && dbmate -d ./packages/server/migrations up', vars.BACKEND_DIR) }}
      - name: PM2 Start App
        run: |
          ssh server $COMMAND
        env:
          COMMAND: ${{ format('cd {0} && . ~/.nvm/nvm.sh && nvm use 20 && pm2 start ecosystem.config.cjs', vars.BACKEND_DIR) }}


  # backend:
  #   runs-on: ubuntu-latest
  #   environment: staging
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: kamiyo/sycpiano:latest
      # - name: Setup SSH
      #   uses: ./.github/actions/setup-ssh
      #   with:
      #     ssh-key: ${{ secrets.SSH_ED25519 }}
      #     ssh-host: ${{ secrets.SSH_HOST }}
      #     ssh-user: ${{ secrets.SSH_USER }}
      # - name: Create Tunnel to DB
      #   run: ssh -fN -L 5432:localhost:5432 server
      # - name: Migration
      #   uses: addnab/docker-run-action@v3
      #   with:
      #     image: amacneil/dbmate
      #     options: -v ${{ github.workspace }}:/workspace --network=host -e DATABASE_URL
      #     run: |
      #       cd /workspace
      #       dbmate -d ./packages/server/migrations up
      #   env:
      #       DATABASE_URL: ${{ format('postgres://{0}:{1}@localhost:5432/{2}?sslmode=disable', secrets.DB_USER, secrets.DB_PASS, secrets.DB_NAME) }}
      # - name: Run docker compose pull and up and prune
      #   run: |
      #     ssh server $COMMAND
      #   env:
      #     COMMAND: ${{ format('cd {0} && docker compose pull && docker compose up -d && docker image prune -f', vars.COMPOSE_DIR) }}
